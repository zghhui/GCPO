# Model arguments
model_name_or_path: /home/bingxing2/ailab/quyichang/zgh/data/pretrain_model/models--jadohu--LlamaGen-T2I
torch_dtype: bfloat16
attn_implementation: sdpa

# Data training arguments
# We edit the DeepSeek chat template to ensure (a) the reasoning block within <think> and </think> is included in the completion and (b) the <think> tag is not part of the prefill so that the format reward works
dataset_name: "gen"
system_prompt: "You are a helpful AI Assistant that provides well-reasoned and detailed responses. You first think about the reasoning process as an internal monologue and then provide the user with the answer. Respond in the following format: <think>\n...\n</think>\n<answer>\n...\n</answer>"

# GRPO trainer config
beta: 0.04
bf16: true
use_vllm: False
vllm_device: auto
vllm_gpu_memory_utilization: 0.3

# generation config
temperature: 1.0

do_eval: false
gradient_accumulation_steps: 4
gradient_checkpointing: True
gradient_checkpointing_kwargs:
  use_reentrant: false
learning_rate: 1.0e-04
log_completions: false
log_level: info
logging_first_step: false
logging_steps: 1
logging_strategy: steps
lr_scheduler_type: cosine_with_min_lr
lr_scheduler_kwargs:
  min_lr_rate: 0.1
max_prompt_length: 256
# 256 4096
max_completion_length: 512
max_steps: -1
num_iterations: 1
num_generations: 8
num_train_epochs: 1
output_dir: /home/bingxing2/ailab/quyichang/zgh/code/LLamaGen_clipscore_entropy_curve/save
overwrite_output_dir: true
per_device_train_batch_size: 16
# (per_device_train_batch_size * n_processes) % n_generations == 0
# prompt = per_device_train_batch_size * n_processes // n_generations
# Currently, I think for trl>0.14, per_device_train_batch_size means number of 
# generations per device, and not the number of prompts per device.

push_to_hub: false
report_to:
- none
wandb_project: AR+RL
reward_funcs:
- geneval
reward_weights:
- 1.0
save_strategy: "steps"
save_steps: 50
seed: 0
warmup_ratio: 0.1
